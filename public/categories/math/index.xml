<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>math on The Median Data Scientist</title>
    <link>https://dsollberger2022.netlify.app/categories/math/</link>
    <description>Recent content in math on The Median Data Scientist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://dsollberger2022.netlify.app/categories/math/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deck of Cards</title>
      <link>https://dsollberger2022.netlify.app/blog/2022/08/08/2022-08-08-deck-of-cards/</link>
      <pubDate>Mon, 08 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dsollberger2022.netlify.app/blog/2022/08/08/2022-08-08-deck-of-cards/</guid>
      <description>Years ago, I had to simulate a deck of playing cards in a Python course. Oddly enough, I don’t recall ever carrying out this task in R. Today, I saw a neat code snippet about the crossing() command in tidyr by Tan Ho in the R4DS Slack channel, so let us give it a try.
library(&amp;quot;tidyverse&amp;quot;)suit &amp;lt;- c(&amp;quot;D&amp;quot;, &amp;quot;H&amp;quot;, &amp;quot;C&amp;quot;, &amp;quot;S&amp;quot;)rank &amp;lt;- c(2:10, &amp;quot;J&amp;quot;, &amp;quot;Q&amp;quot;, &amp;quot;K&amp;quot;, &amp;quot;A&amp;quot;)deck &amp;lt;- tidyr::crossing(rank, suit) |&amp;gt; dplyr::mutate(card = paste0(rank, suit))This yields a data frame with 3 columns: rank, suit, card.</description>
    </item>
    
    <item>
      <title>Radically Infinite</title>
      <link>https://dsollberger2022.netlify.app/blog/2022/07/06/2022-07-06-radically-infinite/</link>
      <pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dsollberger2022.netlify.app/blog/2022/07/06/2022-07-06-radically-infinite/</guid>
      <description>In today’s procrastination effort, I want to generate the LaTeX code to produce an infinite radical expansion for the number 3, and generate the code using R.
… inspired by math teacher Chris Smith
tweetFirst, let me see if I can simply generate the pattern of integers. I will use the letter capital “S” and later replace it with the square root symbol.
stem &amp;lt;- &amp;quot;S 1 + &amp;quot;print(paste(stem, &amp;quot;8&amp;quot;))## [1] &amp;quot;S 1 + 8&amp;quot;for(a in 2:5){b &amp;lt;- (a+1)^2-1print(paste(stem, a, &amp;quot;*&amp;quot;, b/a))print(paste(stem, a, &amp;quot;S&amp;quot;, (b/a)^2))print(paste(stem, a, &amp;quot;S&amp;quot;, 1, &amp;quot;+&amp;quot;, (b/a)^2- 1))stem &amp;lt;- paste(stem, a, &amp;quot;S&amp;quot;, 1, &amp;quot;+&amp;quot;)}## [1] &amp;quot;S 1 + 2 * 4&amp;quot;## [1] &amp;quot;S 1 + 2 S 16&amp;quot;## [1] &amp;quot;S 1 + 2 S 1 + 15&amp;quot;## [1] &amp;quot;S 1 + 2 S 1 + 3 * 5&amp;quot;## [1] &amp;quot;S 1 + 2 S 1 + 3 S 25&amp;quot;## [1] &amp;quot;S 1 + 2 S 1 + 3 S 1 + 24&amp;quot;## [1] &amp;quot;S 1 + 2 S 1 + 3 S 1 + 4 * 6&amp;quot;## [1] &amp;quot;S 1 + 2 S 1 + 3 S 1 + 4 S 36&amp;quot;## [1] &amp;quot;S 1 + 2 S 1 + 3 S 1 + 4 S 1 + 35&amp;quot;## [1] &amp;quot;S 1 + 2 S 1 + 3 S 1 + 4 S 1 + 5 * 7&amp;quot;## [1] &amp;quot;S 1 + 2 S 1 + 3 S 1 + 4 S 1 + 5 S 49&amp;quot;## [1] &amp;quot;S 1 + 2 S 1 + 3 S 1 + 4 S 1 + 5 S 1 + 48&amp;quot;Not only do I need to now insert the square root symbol, but I would also need to close the parentheses.</description>
    </item>
    
  </channel>
</rss>
